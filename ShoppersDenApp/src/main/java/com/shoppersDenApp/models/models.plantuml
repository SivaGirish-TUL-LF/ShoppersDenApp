@startuml

title __MODELS's Class Diagram__\n

  namespace com.shoppersDenApp.models {
    class com.shoppersDenApp.models.Address {
        - address : String
        - city : String
        - country : String
        - state : String
        - zip : long
        + Address()
        + Address()
        + equals()
        + getAddress()
        + getCity()
        + getCountry()
        + getState()
        + getZip()
        + hashCode()
        + setAddress()
        + setCity()
        + setCountry()
        + setState()
        + setZip()
        + toString()
        # canEqual()
    }
  }
  

  namespace com.shoppersDenApp.models {
    class com.shoppersDenApp.models.Admin {
        - a_name : String
        - a_pwd : String
        + Admin()
        + Admin()
        + equals()
        + getA_name()
        + getA_pwd()
        + hashCode()
        + setA_name()
        + setA_pwd()
        + toString()
        # canEqual()
    }
  }
  

  namespace com.shoppersDenApp.models {
    class com.shoppersDenApp.models.Cart {
        - billAmt : double
        - cartTable : Hashtable<Product, Integer>
        - user_id : long
        + Cart()
        + Cart()
        + equals()
        + getBillAmt()
        + getCartTable()
        + getUser_id()
        + hashCode()
        + insertIntoCart()
        + removeFromCart()
        + setBillAmt()
        + setCartTable()
        + setUser_id()
        + toString()
        + updateCart()
        # canEqual()
    }
  }
  

  namespace com.shoppersDenApp.models {
    class com.shoppersDenApp.models.Category {
        - category_id : long
        - category_name : String
    }
  }
  

  namespace com.shoppersDenApp.models {
    class com.shoppersDenApp.models.Customer {
        - customer_id : long
        - email : String
        - name : String
        - phoneNo : long
        - pwd : String
        - secretA : String
        - secretQ : String
        + Customer()
        + Customer()
        + equals()
        + getAddress()
        + getCustomer_id()
        + getEmail()
        + getName()
        + getPhoneNo()
        + getPwd()
        + getSecretA()
        + getSecretQ()
        + hashCode()
        + setAddress()
        + setCustomer_id()
        + setEmail()
        + setName()
        + setPhoneNo()
        + setPwd()
        + setSecretA()
        + setSecretQ()
        + toString()
        # canEqual()
    }
  }
  

  namespace com.shoppersDenApp.models {
    class com.shoppersDenApp.models.Product {
        - cate_id : long
        - dom : LocalDate
        - img_url : String
        - price : double
        - prod_desc : String
        - prod_id : long
        - prod_name : String
        + Product()
        + Product()
        + equals()
        + getCate_id()
        + getDom()
        + getImg_url()
        + getPrice()
        + getProd_desc()
        + getProd_id()
        + getProd_name()
        + hashCode()
        + setCate_id()
        + setDom()
        + setImg_url()
        + setPrice()
        + setProd_desc()
        + setProd_id()
        + setProd_name()
        + toString()
        # canEqual()
    }
  }
  

  namespace com.shoppersDenApp.models {
    class com.shoppersDenApp.models.Transaction {
        - cost : double
        - customerId : long
        - dop : LocalDate
        - productId : long
        - productName : String
        - quantity : int
        - transactionId : long
        + Transaction()
        + Transaction()
        + equals()
        + getCost()
        + getCustomerId()
        + getDop()
        + getProductId()
        + getProductName()
        + getQuantity()
        + getTransactionId()
        + hashCode()
        + setCost()
        + setCustomerId()
        + setDop()
        + setProductId()
        + setProductName()
        + setQuantity()
        + setTransactionId()
        + toString()
        # canEqual()
    }
  }
  

  com.shoppersDenApp.models.Customer o-- com.shoppersDenApp.models.Address : address


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
